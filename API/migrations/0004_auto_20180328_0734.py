# Generated by Django 2.0.3 on 2018-03-28 07:34

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('API', '0003_auto_20180328_0703'),
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название материала')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена метериала')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Tint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название отделки/тонировки')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена отделки/тонировки')),
            ],
            options={
                'verbose_name': 'Окраска/тонировка',
                'verbose_name_plural': 'Окраска/тонировка',
            },
        ),
        migrations.AddField(
            model_name='stair',
            name='brush',
            field=models.BooleanField(default=True, verbose_name='Патина'),
        ),
        migrations.AddField(
            model_name='stair',
            name='patina',
            field=models.BooleanField(default=True, verbose_name='Патина'),
        ),
        migrations.AddField(
            model_name='stair',
            name='step_width_step',
            field=models.PositiveSmallIntegerField(default=5, verbose_name='Шаг ширины ступени'),
        ),
        migrations.AddField(
            model_name='stair',
            name='step_width_top_step',
            field=models.PositiveSmallIntegerField(default=5, verbose_name='Шаг ширины верхней ступени'),
        ),
        migrations.AddField(
            model_name='stair',
            name='title',
            field=models.CharField(default=1, max_length=100, verbose_name='Название лестницы'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='fence',
            name='price',
            field=models.PositiveIntegerField(default=0, verbose_name='Цена ограждения/балюстрады'),
        ),
        migrations.AlterField(
            model_name='fence',
            name='title',
            field=models.CharField(max_length=100, verbose_name='Название ограждения/балюстрады'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='max_marsh',
            field=models.PositiveIntegerField(default=1300, verbose_name='Максимальная ширина марша'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='max_width_step',
            field=models.PositiveIntegerField(default=350, verbose_name='Максимальная ширина ступени'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='max_width_top_step',
            field=models.PositiveIntegerField(default=300, verbose_name='Максимальная ширина верхней ступени'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='min_marsh',
            field=models.PositiveIntegerField(default=550, verbose_name='Минимальная ширина марша'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='min_width_step',
            field=models.PositiveIntegerField(default=100, verbose_name='Минимальная ширина ступени'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='min_width_top_step',
            field=models.PositiveIntegerField(default=40, verbose_name='Минимальная ширина верхней ступени'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='step_height',
            field=models.PositiveSmallIntegerField(default=5, verbose_name='Шаг высоты лестницы'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='step_marsh',
            field=models.PositiveSmallIntegerField(default=5, verbose_name='Шаг ширины марша'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='visible_first_marsh',
            field=models.BooleanField(default=True, verbose_name='Ограждение на первом марше'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='visible_invitation_step',
            field=models.BooleanField(default=True, verbose_name='Пригласительная ступень'),
        ),
        migrations.AlterField(
            model_name='stair',
            name='visible_riser',
            field=models.BooleanField(default=True, verbose_name='Подступенок'),
        ),
        migrations.AlterField(
            model_name='tracksupport',
            name='price',
            field=models.PositiveIntegerField(default=0, verbose_name='Цена пристенного профиля'),
        ),
        migrations.AlterField(
            model_name='tracksupport',
            name='title',
            field=models.CharField(max_length=100, verbose_name='Название пристенного профиля'),
        ),
        migrations.AlterField(
            model_name='turn',
            name='price',
            field=models.PositiveIntegerField(default=0, verbose_name='Цена поворота'),
        ),
        migrations.AlterField(
            model_name='turn',
            name='title',
            field=models.CharField(max_length=100, verbose_name='Название поворота'),
        ),
        migrations.AddField(
            model_name='stair',
            name='material_stair',
            field=models.ManyToManyField(blank=True, to='API.Material'),
        ),
        migrations.AddField(
            model_name='stair',
            name='tint',
            field=models.ManyToManyField(blank=True, to='API.Tint'),
        ),
    ]
